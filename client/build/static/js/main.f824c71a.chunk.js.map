{"version":3,"sources":["Upload.js","Image.js","ImageList.js","App.js","index.js"],"names":["Upload","state","uri","loading","this","setState","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","ok","props","updateData","_this2","react_default","a","createElement","TextField_default","variant","label","style","width","marginBottom","onChange","e","target","value","CircularProgress_default","color","Button_default","onClick","onUpload","Component","Image","Paper_default","height","src","marginTop","margin","name","ImageList","Grid_default","item","xs","container","justify","spacing","Number","images","map","key","id","Image_Image","sortBy","query","App","tab","search","page","dynamicLoading","sort","getImages","_this","bind","Object","assertThisInitialized","url","response","json","responseJson","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","image","length","slice","concat","console","log","_context2","t1","message","event","_this$setState","defineProperty","find","elm","prevCount","currCount","_this3","textAlign","className","padding","paddingTop","Upload_Upload","Divider_default","display","flexDirection","justifyContent","FormControl_default","InputLabel_default","htmlFor","Select_default","onSort","inputProps","MenuItem_default","ImageList_ImageList","size","onLoadMore","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f824c71a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nexport default class Upload extends Component {\n    state = {\n        uri: '',\n        loading: false\n    }\n\n    async onUpload() {\n        if (!this.state.uri) return\n        this.setState({ loading: true })\n        let response = await fetch('/api', {\n            method: 'post',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                uri: this.state.uri\n            })\n        })\n        if (response.ok) {\n            this.props.updateData(0)\n        }\n        this.setState({ loading: false })\n    }\n\n    render() {\n        return (\n            <div>\n                <TextField\n                    variant='outlined'\n                    label='Image url...'\n                    style={{ width: '100%', marginBottom: 10 }}\n                    onChange={e => this.setState({ uri: e.target.value })}\n                />\n                {this.state.loading ?\n                    <CircularProgress color='secondary' />\n                    :\n                    <Button variant='outlined' color='secondary' onClick={() => this.onUpload()}>Upload</Button>\n                }\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper'\n\nexport default class Image extends Component {\n    render() {\n        return (\n            <Paper style={{ height: 400, width: 500 }}>\n                <img\n                    src={this.props.src}\n                    style={{ height: '80%', width: '95%', marginTop: 5 }}\n                />\n                <h3 style={{ margin: 0 }}>{this.props.name}</h3>\n            </Paper>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Image from './Image'\n\nexport default class ImageList extends Component {\n    render() {\n        return (\n            <div>\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" spacing={Number(24)}>\n                        {this.props.images.map(value => (\n                            <Grid key={value.id} item>\n                                <Image src={value.src} name={value.name} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport Divider from '@material-ui/core/Divider'\nimport Select from '@material-ui/core/Select'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Upload from './Upload'\nimport ImageList from './ImageList'\nimport './stylesheets/App.css'\n\nconst sortBy = [\n    {\n        label: 'Name',\n        query: 'name'\n    },\n    {\n        label: 'Size',\n        query: 'size'\n    },\n    {\n        label: 'Upload date',\n        query: 'date'\n    }\n]\n\nclass App extends Component {\n    state = {\n        tab: 0,\n        sortBy: sortBy[2].label,\n        images: [],\n        search: '',\n        loading: false,\n        page: 0,\n        dynamicLoading: false,\n        sort: 'date'\n    }\n    getImages = this.getImages.bind(this)\n\n    async componentDidMount() {\n        this.getImages(0)\n    }\n\n    async getImages(page) {\n        this.setState({ loading: true })\n        let url = '/api?start=' + page + '&sort=' + this.state.sort + '&search=' + this.state.search\n        try {\n            let response = await fetch(url, {\n                method: 'get',\n                headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' }\n            })\n            if (response.ok) {\n                let responseJson = await response.json()\n                for (let image of responseJson.images)\n                    if (image.name.length > 20) image.name = image.name.slice(0, 20) + '...'\n\n                let images = this.state.images\n                if (page > this.state.page) images = images.concat(responseJson.images)\n                else {\n                    images = responseJson.images.slice()\n                    this.setState({ page })\n                }\n                this.setState({ images })\n            }\n            this.setState({ loading: false })\n        } catch (err) {\n            console.log(err.message)\n            this.setState({ loading: false })\n        }\n    }\n\n    onSort(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n            sort: sortBy.find(elm => elm.label === event.target.value).query\n        }, () => this.getImages(0))\n    }\n\n    async onLoadMore() {\n        let page = this.state.page\n        let prevCount = this.state.images.length\n        await this.getImages(page + 1)\n        let currCount = this.state.images.length\n        if (prevCount !== currCount) this.setState({ page: page + 1 })\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <div className='app-body'>\n                    <Paper style={{ padding: 10, paddingTop: 0, marginBottom: 20, marginTop: 20, width: '75%' }}>\n                        <div style={{ marginTop: 10, marginBottom: 10, textAlign: 'left' }}>\n                            <Upload updateData={this.getImages} />\n                            <Divider style={{ marginTop: 10 }} />\n                        </div>\n                        <div style={{ marginBottom: 10, display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: '70%' }}>\n                            <TextField\n                                variant='outlined'\n                                label='Find image...'\n                                style={{ width: '65%' }}\n                                onChange={e => this.setState({ search: e.target.value })}\n                            />\n                            <Button\n                                variant='outlined'\n                                color='secondary'\n                                style={{ width: '10%' }}\n                                onClick={() => this.getImages(0, this.state.search)}\n                            >\n                                Find\n                            </Button>\n                            <FormControl style={{ width: '20%' }}>\n                                <InputLabel htmlFor=\"age-simple\">Sort by</InputLabel>\n                                <Select\n                                    value={this.state.sortBy}\n                                    onChange={event => this.onSort(event)}\n                                    inputProps={{\n                                        name: 'sortBy',\n                                    }}\n                                >\n                                    {sortBy.map(elm =>\n                                        <MenuItem key={elm.label} value={elm.label}>{elm.label}</MenuItem>\n                                    )}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {this.state.loading && <CircularProgress color='secondary' style={{ marginBottom: 10 }} />}\n                        {this.state.images.length > 0 &&\n                            <div>\n                                <ImageList images={this.state.images} />\n                                {this.state.dynamicLoading ?\n                                    <CircularProgress color='secondary' size={20} style={{ marginTop: 10 }} />\n                                    :\n                                    <Button variant='outlined' style={{ marginTop: 10 }} onClick={() => this.onLoadMore()}>Load more</Button>\n                                }\n                            </div>\n                        }\n                    </Paper>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './stylesheets/index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}